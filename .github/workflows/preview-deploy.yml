name: Build and Deploy Slides

on:
  push:
    branches:
      - main
    paths:
      - 'slides/**/*.md'

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Marp CLI
        run: npm install -g @marp-team/marp-cli@latest
      
      - name: Find changed slides
        id: files
        run: |
          echo "files<<EOF" >> $GITHUB_OUTPUT
          (git diff --name-only HEAD^ HEAD | grep -E "slides/.*\.md$" || true) >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Build HTML slides
        if: steps.files.outputs.files != ''
        run: |
          mkdir -p build
          
          echo "Building slides:"
          echo "${{ steps.files.outputs.files }}"
          echo ""
          
          echo "${{ steps.files.outputs.files }}" | while IFS= read -r file; do
            if [ -z "$file" ] || [ ! -f "$file" ]; then
              continue
            fi
            
            echo "Building: $file"
            slide_dir=$(dirname "$file")
            output_dir="build/$slide_dir"
            mkdir -p "$output_dir"
            
            # Generate HTML only
            marp --html "$file" --allow-local-files -o "$output_dir/index.html"
            
            # Copy images if exists
            if [ -d "$slide_dir/images" ]; then
              cp -r "$slide_dir/images" "$output_dir/"
            fi
            
            echo "‚úÖ Built: $output_dir/index.html"
          done
      
      - name: Generate slides index page
        run: |
          mkdir -p build
          
          # Find all slide directories
          SLIDE_DIRS=$(find slides -type d -name "20*" -maxdepth 1 2>/dev/null | sort -r || true)
          
          # Generate index.html with slides list
          cat > build/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="ja">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Marp Slides Generator - „Çπ„É©„Ç§„Éâ‰∏ÄË¶ß</title>
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                max-width: 1000px;
                margin: 0 auto;
                padding: 2rem;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
              }
              .container {
                background: white;
                border-radius: 15px;
                padding: 3rem;
                box-shadow: 0 25px 50px rgba(0,0,0,0.15);
              }
              h1 { 
                color: #333; 
                text-align: center;
                margin-bottom: 2rem;
                font-size: 2.5rem;
              }
              .slides-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 2rem;
                margin: 2rem 0;
              }
              .slide-card {
                background: #f8f9fa;
                border-radius: 10px;
                padding: 1.5rem;
                border-left: 4px solid #667eea;
                transition: all 0.3s ease;
              }
              .slide-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.1);
              }
              .slide-title {
                font-size: 1.2rem;
                font-weight: 600;
                color: #333;
                margin-bottom: 0.5rem;
              }
              .slide-date {
                color: #666;
                font-size: 0.9rem;
                margin-bottom: 1rem;
              }
              .slide-links a {
                padding: 0.5rem 1rem;
                border-radius: 6px;
                text-decoration: none;
                font-weight: 500;
                background: #667eea;
                color: white;
                transition: all 0.2s ease;
              }
              .slide-links a:hover {
                background: #5a67d8;
              }
              .no-slides {
                text-align: center;
                color: #666;
                margin: 2rem 0;
              }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>üìä Marp Slides Generator</h1>
          EOF
          
          # Add slides list or no-slides message
          if [ -n "$SLIDE_DIRS" ]; then
            echo '      <div class="slides-grid">' >> build/index.html
            
            for dir in $SLIDE_DIRS; do
              # Extract date and title from directory name
              BASENAME=$(basename "$dir")
              DATE_PART=$(echo "$BASENAME" | cut -d'-' -f1-3)
              TITLE_PART=$(echo "$BASENAME" | cut -d'-' -f4- | tr '-' ' ')
              
              # Format date
              YEAR=$(echo "$DATE_PART" | cut -d'-' -f1)
              MONTH=$(echo "$DATE_PART" | cut -d'-' -f2)
              DAY=$(echo "$DATE_PART" | cut -d'-' -f3)
              FORMATTED_DATE="$YEARÂπ¥${MONTH}Êúà${DAY}Êó•"
              
              # Check if built files exist
              HTML_EXISTS=""
              if [ -f "build/$dir/index.html" ]; then
                HTML_EXISTS="true"
              fi
              
              echo '        <div class="slide-card">' >> build/index.html
              echo "          <div class=\"slide-title\">$TITLE_PART</div>" >> build/index.html
              echo "          <div class=\"slide-date\">$FORMATTED_DATE</div>" >> build/index.html
              echo '          <div class="slide-links">' >> build/index.html
              
              if [ "$HTML_EXISTS" = "true" ]; then
                echo "            <a href=\"$dir/index.html\">üìÑ HTML„Çπ„É©„Ç§„Éâ</a>" >> build/index.html
              else
                echo "            <span style=\"color: #999;\">„Éì„É´„ÉâÂæÖ„Å°...</span>" >> build/index.html
              fi
              
              echo '          </div>' >> build/index.html
              echo '        </div>' >> build/index.html
            done
            
            echo '      </div>' >> build/index.html
          else
            cat >> build/index.html << 'EOF'
              <div class="no-slides">
                <p>üì≠ „Åæ„Å†„Çπ„É©„Ç§„Éâ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì</p>
              </div>
          EOF
          fi
          
          # Add footer
          cat >> build/index.html << 'EOF'
            </div>
          </body>
          </html>
          EOF
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4